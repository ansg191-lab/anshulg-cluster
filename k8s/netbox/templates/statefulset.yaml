apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "netbox.fullname" . }}
  labels:
    {{- include "netbox.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "netbox.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "netbox.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "netbox.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets}}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "netbox.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "{{ .Values.netbox.puid }}"
            - name: PGID
              value: "{{ .Values.netbox.pgid }}"
            - name: TZ
              value: "{{ .Values.netbox.timezone }}"
            - name: SUPERUSER_EMAIL
              value: "{{ .Values.netbox.superuser.email }}"
            - name: SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.netbox.superuser.password.secretName }}
                  key: {{ .Values.netbox.superuser.password.key }}
            - name: ALLOWED_HOST
              value: "netbox.anshulg.com"
            - name: DB_HOST
              value: {{ .Release.Name }}-postgresql
            - name: DB_PORT
              value: "{{ .Values.postgresql.primary.service.ports.postgresql }}"
            - name: DB_NAME
              value: "{{ .Values.postgresql.auth.database }}"
            - name: DB_USER
              value: "{{ .Values.postgresql.auth.username }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingSecret }}
                  key: {{ .Values.postgresql.auth.secretKeys.userPasswordKey }}
            - name: REDIS_HOST
              value: {{ .Release.Name }}-redis-master
            - name: REDIS_PORT
              value: "{{ .Values.redis.master.service.ports.redis }}"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.auth.existingSecret }}
                  key: {{ .Values.redis.auth.existingSecretPasswordKey }}
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: netbox-config
              mountPath: /config
              readOnly: false
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      initContainers:
        - name: check-postgres-ready
          image: "postgres:16.4"
          command:
            - 'sh'
            - '-c'
            - >
              until pg_isready -h {{ .Release.Name }}-postgresql -p {{ .Values.postgresql.primary.service.ports.postgresql }} -U {{ .Values.postgresql.auth.username }} -d {{ .Values.postgresql.auth.database }} -t 5; do
                sleep 1;
              done;
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
          {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: netbox-config
        labels:
          {{- include "netbox.labels" . | nindent 10 }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.configStorage.storageClass }}
        resources:
          requests:
            storage: {{ .Values.configStorage.size }}
