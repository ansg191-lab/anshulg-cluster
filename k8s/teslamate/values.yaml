# Default values for teslamate.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: teslamate/teslamate
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
   capabilities:
     drop:
     - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 4000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#livenessProbe:
#  httpGet:
#    path: /
#    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Traefik IngressRoute options
ingressRoute:
  enabled: true
  entryPoints:
    - websecure
  hosts:
    - teslamate.anshulg.com
  middlewares:
    - name: security-headers
      namespace: traefik
  tls:
    enabled: true
    duration: 2160h0m0s
    renewBefore: 720h0m0s
    privateKey:
      algorithm: ECDSA
      size: 384
      rotationPolicy: Always
    issuerRef:
      group: cas-issuer.jetstack.io
      kind: GoogleCASClusterIssuer
      name: anshulg-ca

grafana:
  replicaCount: 1
  image:
    repository: teslamate/grafana
    pullPolicy: IfNotPresent
    tag: ""

  podSecurityContext:
    fsGroup: 472
  securityContext: {}

  pvc:
    storageClass: "standard-rwo"
    size: "8Gi"

  service:
    type: ClusterIP
    port: 3000

  ingressRoute:
    enabled: true
    entryPoints:
      - websecure
    hosts:
      - teslaboard.anshulg.com
    middlewares:
      - name: security-headers
        namespace: traefik
    tls:
      enabled: true
      duration: 2160h0m0s
      renewBefore: 720h0m0s
      privateKey:
        algorithm: ECDSA
        size: 384
        rotationPolicy: Always
      issuerRef:
        group: cas-issuer.jetstack.io
        kind: GoogleCASClusterIssuer
        name: anshulg-ca

postgresql:
  diagnosticMode:
    enabled: true
  auth:
    enablePostgresUser: true
    database: "teslamate"
    existingSecret: "teslamate-secrets"
