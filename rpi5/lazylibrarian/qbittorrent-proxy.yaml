apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-proxy-template
data:
  setup.sh: |
    #!/bin/sh
    set -eu
    BASIC_B64="$(printf "%s:%s" "$BASIC_USER" "$BASIC_PASS" | base64 -w0)"
    export BASIC_B64
    envsubst '$$UPSTREAM_HOST $$UPSTREAM_PATH $$BASIC_B64' \
      < /etc/nginx/templates/default.conf.template \
      > /etc/nginx/conf.d/default.conf
  default.conf.template: |
    server {
      listen 8080 default_server;
      server_name _;

      # Health check
      location = /healthz {
        return 200 'ok';
        add_header Content-Type text/plain;
      }

      # Proxy everything else to upstream path
      location / {
        # Inject Basic Auth header
        proxy_set_header Authorization "Basic ${BASIC_B64}";

        # Ensure upstream sees correct host + SNI
        proxy_set_header Host ${UPSTREAM_HOST};
        proxy_ssl_server_name on;
        proxy_ssl_name ${UPSTREAM_HOST};

        # Sensible proxy defaults
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_buffering off;
        proxy_redirect off;

        # Send to exact upstream path
        proxy_pass https://${UPSTREAM_HOST}${UPSTREAM_PATH};
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qb-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qb-proxy
  template:
    metadata:
      labels:
        app: qb-proxy
    spec:
      containers:
        - name: nginx
          image: nginxinc/nginx-unprivileged:1.29.1@sha256:ad78b4a52a68a93aa3490260e0bf7b3afd35689d312f22bb28300fbe43a158e5
          ports:
            - containerPort: 8080
          env:
            - name: UPSTREAM_HOST
              value: "56.lw.itsby.design"
            - name: UPSTREAM_PATH
              value: "/qbittorrent/"
            - name: BASIC_USER
              valueFrom:
                secretKeyRef:
                  name: qbt-secret
                  key: BASIC_USER
            - name: BASIC_PASS
              valueFrom:
                secretKeyRef:
                  name: qbt-secret
                  key: BASIC_PASS
          volumeMounts:
            - name: nginx-templates
              mountPath: /etc/nginx/templates/default.conf.template
              subPath: default.conf.template
            - name: nginx-templates
              mountPath: /docker-entrypoint.d/99setup.sh
              subPath: setup.sh
            - name: tmp
              mountPath: /tmp
            - name: conf
              mountPath: /etc/nginx/conf.d
          readinessProbe:
            httpGet:
              port: 8080
              path: /api/v2/app/version
          livenessProbe:
            httpGet:
              port: 8080
              path: /healthz
            initialDelaySeconds: 30
          securityContext:
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: nginx-templates
          configMap:
            name: nginx-proxy-template
            defaultMode: 0755
        - name: tmp
          emptyDir:
            medium: Memory
        - name: conf
          emptyDir:
            medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: qb-proxy
spec:
  selector:
    app: qb-proxy
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: ClusterIP
