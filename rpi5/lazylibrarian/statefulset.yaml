apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lazylibrarian
  labels:
    app: lazylibrarian
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lazylibrarian
  serviceName: lazylibrarian
  template:
    metadata:
      name: lazylibrarian
      labels:
        app: lazylibrarian
    spec:
      containers:
        - name: lazylibrarian
          image: lscr.io/linuxserver/lazylibrarian:c8ad32b8-ls68@sha256:f2b2bb32ffafd092c42f5a1d4bc51984b2f16426f1a9c73025119531a626488d
          imagePullPolicy: IfNotPresent
          env:
            - name: PUID
              value: "0"
            - name: PGID
              value: "0"
            - name: TZ
              value: "America/Los_Angeles"
            - name: DOCKER_MODS
              value: "linuxserver/mods:universal-calibre|linuxserver/mods:lazylibrarian-ffmpeg"
          ports:
            - containerPort: 5299
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data
              name: data
          #resources:
          #  requests:
          #    cpu: 250m
          #    memory: 500Mi
          #  limits:
          #    memory: 1Gi
          #livenessProbe:
          #  httpGet:
          #    port: 7878
          #    path: /ping
          #  initialDelaySeconds: 30
          #  periodSeconds: 30
          #  timeoutSeconds: 5
          #  failureThreshold: 3
          #readinessProbe:
          #  httpGet:
          #    port: 7878
          #    path: /ping
          #  periodSeconds: 10
          #  timeoutSeconds: 5
          #  failureThreshold: 3
      restartPolicy: Always
      volumes:
        - name: data
          nfs:
            path: /data
            server: 192.168.1.52
            readOnly: false
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
