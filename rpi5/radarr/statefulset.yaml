apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr
  labels:
    app: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  serviceName: radarr
  template:
    metadata:
      name: radarr
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: radarr
    spec:
      initContainers:
        - name: backup-sidecar
          image: ghcr.io/ansg191/containers/arr-backup:main@sha256:f7b7e5a4be5b7e2520629d00701beba89437487c9d1e1e08632af404fb190c18
          imagePullPolicy: IfNotPresent
          restartPolicy: Always
          volumeMounts:
            - mountPath: /rconfig
              name: config
            - mountPath: /tarsnapper.conf
              name: tarsnapper-config
              subPath: tarsnapper.conf
            - mountPath: /config/tarsnap.key
              name: backup-key
              subPath: tarsnap.key
            - mountPath: /backup
              name: backup-tmpdir
            - mountPath: /tarsnap-cache
              name: tarsnap-cache
          env:
            - name: ARR_CONFIG_DIR
              value: /rconfig
            - name: ARR_API_KEY
              valueFrom:
                secretKeyRef:
                  name: backup-key
                  key: api-key
            - name: ARR_URL
              value: http://localhost:7878
            - name: TARSNAPPER_CONFIG
              value: /tarsnapper.conf
            - name: ARR_TMP_DIR
              value: /backup
          securityContext:
            runAsUser: 0
            runAsGroup: 0
      containers:
        - name: radarr
          image: lscr.io/linuxserver/radarr:5.26.2@sha256:c2adf66bafefa781401d07d358e399c476bdffb9a179a2780bb465bda8a55a51
          imagePullPolicy: IfNotPresent
          env:
            - name: PUID
              value: "0"
            - name: PGID
              value: "0"
            - name: TZ
              value: "America/Los_Angeles"
          ports:
            - containerPort: 7878
              protocol: TCP
              name: http
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data
              name: data
            - mountPath: /etc/ssl/certs/ca-certificates.crt
              name: ca
              subPath: ca.crt
          resources:
            requests:
              cpu: 250m
              memory: 500Mi
            limits:
              memory: 1Gi
          livenessProbe:
            httpGet:
              port: 7878
              path: /ping
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              port: 7878
              path: /ping
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      restartPolicy: Always
      volumes:
        - name: data
          nfs:
            path: /data
            server: 192.168.1.52
            readOnly: false
        - name: tarsnapper-config
          configMap:
            name: tarsnapper-config
        - name: backup-key
          secret:
              secretName: backup-key
        - name: backup-tmpdir
          emptyDir:
            medium: Memory
        - name: tarsnap-cache
          emptyDir: { }
        - name: ca
          configMap:
            name: anshulg-ca
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tarsnapper-config
data:
  tarsnapper.conf: |
    deltas: 1d 7d 30d 90d
    target: /rpi5-radarr/$name-$date
    jobs:
      radarr:
        source: /backup
